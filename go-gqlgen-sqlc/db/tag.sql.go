// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: tag.sql

package db

import (
	"context"
)

const createTag = `-- name: CreateTag :one
insert into tags (text) values($1) returning id, text
`

func (q *Queries) CreateTag(ctx context.Context, text string) (*Tag, error) {
	row := q.db.QueryRowContext(ctx, createTag, text)
	var i Tag
	err := row.Scan(&i.ID, &i.Text)
	return &i, err
}

const getTagsByPostId = `-- name: GetTagsByPostId :many
select id, text from tags where post_id = ($1::bigserial)
`

func (q *Queries) GetTagsByPostId(ctx context.Context, postID int64) ([]*Tag, error) {
	rows, err := q.db.QueryContext(ctx, getTagsByPostId, postID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []*Tag
	for rows.Next() {
		var i Tag
		if err := rows.Scan(&i.ID, &i.Text); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
