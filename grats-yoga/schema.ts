import {
	GraphQLList,
	GraphQLNonNull,
	GraphQLObjectType,
	GraphQLSchema,
	GraphQLString,
} from "graphql";
/**
 * Executable schema generated by Grats (https://grats.capt.dev)
 * Do not manually edit. Regenerate by running `npx grats`.
 */
import { user as queryUserResolver } from "./src/features/user";
import { users as queryUsersResolver } from "./src/features/user";
function getSchema(): GraphQLSchema {
	const UserType: GraphQLObjectType = new GraphQLObjectType({
		name: "User",
		fields() {
			return {
				id: {
					name: "id",
					type: GraphQLString,
				},
				name: {
					name: "name",
					type: GraphQLString,
				},
			};
		},
	});
	const QueryType: GraphQLObjectType = new GraphQLObjectType({
		name: "Query",
		fields() {
			return {
				user: {
					name: "user",
					type: UserType,
					args: {
						id: {
							name: "id",
							type: new GraphQLNonNull(GraphQLString),
						},
					},
					resolve(source, args) {
						return queryUserResolver(source, args);
					},
				},
				users: {
					name: "users",
					type: new GraphQLList(new GraphQLNonNull(UserType)),
					resolve(source, args) {
						return queryUsersResolver(source, args);
					},
				},
			};
		},
	});
	return new GraphQLSchema({
		query: QueryType,
		types: [QueryType, UserType],
	});
}
export { getSchema };
