# GraphQL schema example
#
# https://gqlgen.com/getting-started/

### This file was generated by Nexus Schema
### Do not make changes to this file directly

type Article {
  """
  The author of the article
  """
  author: User!
  body: String!
  createdAt: DateTime!

  """
  The description of the article
  """
  description: String!

  """
  The unique slug for the article
  """
  slug: String!

  """
  The title of the article
  """
  title: String!
  updatedAt: DateTime!
}

type ArticleConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ArticleEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ArticleEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: Article!
}

input CreateMessageInput {
  text: String!
  toUserId: ID!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type MaybeError {
  """
  Error message
  """
  error: String
}

"""
A message between two users.
"""
type Message {
  from: User!
  id: ID!
  text: String!
  to: User!
}

type Mutation {
  addMessage(message: CreateMessageInput!): Message!
  login(email: String!, password: String!): MaybeError
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Query {
  article(slug: String!): Article
  articles(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): ArticleConnection!

  """
  Get the specified user
  """
  user(id: String!): User!

  """
  Get all users
  """
  users: [User!]!
}

type Subscription {
  messageAdded: Message!
}

type User {
  articles(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): ArticleConnection
  email: String!
  id: String!
  name: String!
}
